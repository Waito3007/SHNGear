-- =============================================
-- Script: T·∫°o Users m·∫´u v√† Reviews
-- =============================================

-- Ki·ªÉm tra xem ƒë√£ c√≥ users ch∆∞a
IF NOT EXISTS (SELECT 1 FROM Users)
BEGIN
    PRINT N'üîÑ T·∫°o users m·∫´u...';
    
    -- T·∫°o m·ªôt s·ªë users m·∫´u
    INSERT INTO Users (FirstName, LastName, Email, Phone, PasswordHash, CreatedAt, IsActive, Points) VALUES
    (N'Nguy·ªÖn', N'VƒÉn A', 'nguyenvana@example.com', '0123456789', 'hashed_password_1', GETDATE(), 1, 0),
    (N'Tr·∫ßn', N'Th·ªã B', 'tranthib@example.com', '0987654321', 'hashed_password_2', GETDATE(), 1, 0),
    (N'L√™', N'Minh C', 'leminhc@example.com', '0111222333', 'hashed_password_3', GETDATE(), 1, 0),
    (N'Ph·∫°m', N'Thu D', 'phamthud@example.com', '0444555666', 'hashed_password_4', GETDATE(), 1, 0),
    (N'Ho√†ng', N'VƒÉn E', 'hoangvane@example.com', '0777888999', 'hashed_password_5', GETDATE(), 1, 0),
    (N'ƒê·∫∑ng', N'Th·ªã F', 'dangthif@example.com', '0333444555', 'hashed_password_6', GETDATE(), 1, 0),
    (N'V≈©', N'Minh G', 'vuminhg@example.com', '0666777888', 'hashed_password_7', GETDATE(), 1, 0),
    (N'B√πi', N'Thu H', 'buithuh@example.com', '0999000111', 'hashed_password_8', GETDATE(), 1, 0),
    (N'D∆∞∆°ng', N'VƒÉn I', 'duongvani@example.com', '0222333444', 'hashed_password_9', GETDATE(), 1, 0),
    (N'L√Ω', N'Th·ªã K', 'lythik@example.com', '0555666777', 'hashed_password_10', GETDATE(), 1, 0);
    
    PRINT N'‚úÖ ƒê√£ t·∫°o ' + CAST(@@ROWCOUNT AS NVARCHAR(10)) + N' users m·∫´u';
END
ELSE
BEGIN
    PRINT N'‚ÑπÔ∏è Database ƒë√£ c√≥ users, b·ªè qua b∆∞·ªõc t·∫°o users m·∫´u';
END

-- Ki·ªÉm tra Products
IF NOT EXISTS (SELECT 1 FROM Products)
BEGIN
    PRINT N'‚ö†Ô∏è C·∫£nh b√°o: Ch∆∞a c√≥ s·∫£n ph·∫©m n√†o trong database!';
    PRINT N'üí° H√£y th√™m s·∫£n ph·∫©m tr∆∞·ªõc khi ch·∫°y script reviews';
END
ELSE
BEGIN
    PRINT N'‚úÖ Database ƒë√£ c√≥ s·∫£n ph·∫©m, c√≥ th·ªÉ th√™m reviews';
    
    -- Hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m ƒë·ªÉ tham kh·∫£o
    SELECT TOP 10 
        Id, 
        Name,
        (SELECT COUNT(*) FROM Reviews WHERE ProductId = Products.Id) as ExistingReviews
    FROM Products
    ORDER BY Id;
END

-- Script th√™m reviews th√¥ng minh d·ª±a tr√™n d·ªØ li·ªáu th·ª±c t·∫ø
DECLARE @ProductCount INT = (SELECT COUNT(*) FROM Products);
DECLARE @UserCount INT = (SELECT COUNT(*) FROM Users);

IF @ProductCount > 0 AND @UserCount > 0
BEGIN
    PRINT N'üéØ B·∫Øt ƒë·∫ßu th√™m reviews...';
    
    -- L·∫•y danh s√°ch ProductId v√† UserId th·ª±c t·∫ø
    DECLARE @CurrentProductId INT;
    DECLARE @CurrentUserId INT;
    DECLARE @Counter INT = 1;
    
    -- Cursor ƒë·ªÉ duy·ªát qua c√°c s·∫£n ph·∫©m
    DECLARE product_cursor CURSOR FOR 
    SELECT TOP 5 Id FROM Products ORDER BY Id;
    
    OPEN product_cursor;
    FETCH NEXT FROM product_cursor INTO @CurrentProductId;
    
    WHILE @@FETCH_STATUS = 0
    BEGIN
        -- Th√™m 3-5 reviews cho m·ªói s·∫£n ph·∫©m
        INSERT INTO Reviews (ProductId, UserId, Rating, Comment, CreatedAt, IsApproved)
        SELECT TOP 4
            @CurrentProductId,
            u.Id,
            ABS(CHECKSUM(NEWID()) % 3) + 3, -- Rating t·ª´ 3-5
            CASE ABS(CHECKSUM(NEWID()) % 8)
                WHEN 0 THEN N'S·∫£n ph·∫©m tuy·ªát v·ªùi! R·∫•t h√†i l√≤ng v·ªõi ch·∫•t l∆∞·ª£ng.'
                WHEN 1 THEN N'Ch·∫•t l∆∞·ª£ng t·ªët, gi√° c·∫£ h·ª£p l√Ω. S·∫Ω mua l·∫°i.'
                WHEN 2 THEN N'ƒê√∫ng nh∆∞ m√¥ t·∫£, giao h√†ng nhanh. Recommend!'
                WHEN 3 THEN N'S·∫£n ph·∫©m ·ªïn, ph√π h·ª£p v·ªõi nhu c·∫ßu s·ª≠ d·ª•ng.'
                WHEN 4 THEN N'Ch·∫•t l∆∞·ª£ng cao, d·ªãch v·ª• t·ªët. C·∫£m ∆°n shop!'
                WHEN 5 THEN N'R·∫•t h√†i l√≤ng! S·∫Ω gi·ªõi thi·ªáu cho b·∫°n b√®.'
                WHEN 6 THEN N'T·ªët trong t·∫ßm gi√°, ƒë√°ng ƒë·ªÉ mua th·ª≠.'
                ELSE N'S·∫£n ph·∫©m ok, kh√¥ng c√≥ g√¨ to complain.'
            END,
            DATEADD(day, -ABS(CHECKSUM(NEWID()) % 30), GETDATE()), -- Random ng√†y trong 30 ng√†y qua
            1
        FROM Users u
        WHERE u.Id NOT IN (
            SELECT UserId FROM Reviews WHERE ProductId = @CurrentProductId
        )
        ORDER BY NEWID(); -- Random user
        
        FETCH NEXT FROM product_cursor INTO @CurrentProductId;
    END
    
    CLOSE product_cursor;
    DEALLOCATE product_cursor;
END

-- Hi·ªÉn th·ªã k·∫øt qu·∫£ cu·ªëi c√πng
PRINT N'üìä === K·∫æT QU·∫¢ CU·ªêI C√ôNG ===';

SELECT 
    p.Name AS [T√™n s·∫£n ph·∫©m],
    COUNT(r.Id) AS [S·ªë ƒë√°nh gi√°],
    ROUND(AVG(CAST(r.Rating AS FLOAT)), 1) AS [ƒêi·ªÉm TB],
    MIN(r.Rating) AS [ƒêi·ªÉm th·∫•p nh·∫•t],
    MAX(r.Rating) AS [ƒêi·ªÉm cao nh·∫•t]
FROM Products p
LEFT JOIN Reviews r ON p.Id = r.ProductId AND r.IsApproved = 1
GROUP BY p.Id, p.Name
ORDER BY AVG(CAST(r.Rating AS FLOAT)) DESC;

PRINT N'‚úÖ Ho√†n th√†nh script th√™m reviews!';
