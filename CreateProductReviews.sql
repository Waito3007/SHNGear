-- =============================================
-- Script: T·∫°o Reviews cho s·∫£n ph·∫©m SHN Gear
-- T√°c gi·∫£: SHN Gear System
-- Ng√†y t·∫°o: 2025-06-18
-- =============================================

USE ShnGear;
GO

PRINT N'üöÄ B·∫Øt ƒë·∫ßu t·∫°o reviews cho s·∫£n ph·∫©m SHN Gear...';

-- Ki·ªÉm tra d·ªØ li·ªáu hi·ªán t·∫°i
DECLARE @ProductCount INT = (SELECT COUNT(*) FROM Products);
DECLARE @UserCount INT = (SELECT COUNT(*) FROM Users);

PRINT N'üìä Th√¥ng tin database:';
PRINT N'   - S·ªë s·∫£n ph·∫©m: ' + CAST(@ProductCount AS NVARCHAR(10));
PRINT N'   - S·ªë ng∆∞·ªùi d√πng: ' + CAST(@UserCount AS NVARCHAR(10));

IF @ProductCount = 0 OR @UserCount = 0
BEGIN
    PRINT N'‚ùå Kh√¥ng th·ªÉ t·∫°o reviews: Thi·∫øu s·∫£n ph·∫©m ho·∫∑c ng∆∞·ªùi d√πng!';
    RETURN;
END

-- B·∫£ng comments m·∫´u theo lo·∫°i s·∫£n ph·∫©m
DECLARE @PhoneComments TABLE (Comment NVARCHAR(500), Rating INT);
INSERT INTO @PhoneComments VALUES
(N'ƒêi·ªán tho·∫°i tuy·ªát v·ªùi! Camera s·∫Øc n√©t, pin tr√¢u, hi·ªáu nƒÉng m∆∞·ª£t m√†.', 5),
(N'R·∫•t h√†i l√≤ng v·ªõi s·∫£n ph·∫©m. Thi·∫øt k·∫ø ƒë·∫πp, ch·∫•t l∆∞·ª£ng t·ªët.', 4),
(N'S·∫£n ph·∫©m ƒë√∫ng nh∆∞ m√¥ t·∫£. Giao h√†ng nhanh, ƒë√≥ng g√≥i c·∫©n th·∫≠n.', 5),
(N'ƒêi·ªán tho·∫°i ch·∫•t l∆∞·ª£ng cao, t√≠nh nƒÉng ƒë·∫ßy ƒë·ªß. R·∫•t recommend!', 5),
(N'D√πng r·∫•t ·ªïn, ph√π h·ª£p v·ªõi gi√° ti·ªÅn. M√†n h√¨nh ƒë·∫πp, c·∫£m ·ª©ng nh·∫°y.', 4),
(N'Pin kh√° t·ªët, c√≥ th·ªÉ d√πng c·∫£ ng√†y. Camera ch·ª•p ƒë√™m ·∫•n t∆∞·ª£ng.', 4),
(N'Thi·∫øt k·∫ø sang tr·ªçng, c·∫ßm n·∫Øm ch·∫Øc tay. H·ªá ƒëi·ªÅu h√†nh m∆∞·ª£t m√†.', 5),
(N'S·∫£n ph·∫©m t·ªët trong t·∫ßm gi√°. Hi·ªáu nƒÉng ·ªïn ƒë·ªãnh cho nhu c·∫ßu h√†ng ng√†y.', 4),
(N'Ch·∫•t l∆∞·ª£ng ok, tuy nhi√™n h∆°i n·∫∑ng. Nh√¨n chung v·∫´n h√†i l√≤ng.', 3),
(N'Flagship ƒë·ªânh cao! M·ªçi th·ª© ƒë·ªÅu ho√†n h·∫£o t·ª´ thi·∫øt k·∫ø ƒë·∫øn hi·ªáu nƒÉng.', 5);

DECLARE @LaptopComments TABLE (Comment NVARCHAR(500), Rating INT);
INSERT INTO @LaptopComments VALUES
(N'Laptop tuy·ªát v·ªùi cho c√¥ng vi·ªác! Hi·ªáu nƒÉng m·∫°nh, pin l√¢u.', 5),
(N'M√°y ch·∫°y m∆∞·ª£t, kh√¥ng b·ªã lag. Ph√π h·ª£p cho l·∫≠p tr√¨nh v√† thi·∫øt k·∫ø.', 4),
(N'M√†n h√¨nh ƒë·∫πp, b√†n ph√≠m g√µ tho·∫£i m√°i. R·∫•t h√†i l√≤ng!', 5),
(N'Laptop gaming ƒë·ªânh! Ch·∫°y m·ªçi game ·ªü m·ª©c Ultra m∆∞·ª£t m√†.', 5),
(N'Thi·∫øt k·∫ø ƒë·∫πp, nh·ªè g·ªçn d·ªÖ mang theo. Hi·ªáu nƒÉng ·ªïn ƒë·ªãnh.', 4),
(N'Ch·∫•t l∆∞·ª£ng build t·ªët, t·∫£n nhi·ªát hi·ªáu qu·∫£. ƒê√°ng ƒë·ªìng ti·ªÅn.', 4),
(N'M√†n h√¨nh 4K tuy·ªát ƒë·∫πp, √¢m thanh stereo ch·∫•t l∆∞·ª£ng cao.', 5),
(N'Laptop vƒÉn ph√≤ng l√Ω t∆∞·ªüng. Kh·ªüi ƒë·ªông nhanh, ƒëa nhi·ªám m∆∞·ª£t.', 4),
(N'H∆°i n·∫∑ng m·ªôt ch√∫t nh∆∞ng hi·ªáu nƒÉng b√π ƒë·∫Øp. T·ªïng th·ªÉ ok.', 3),
(N'MacBook Pro M3 qu√° ƒë·ªânh! Render video 4K kh√¥ng h·ªÅ n√≥ng m√°y.', 5);

DECLARE @HeadphoneComments TABLE (Comment NVARCHAR(500), Rating INT);
INSERT INTO @HeadphoneComments VALUES
(N'Tai nghe ch·∫•t l∆∞·ª£ng cao! √Çm thanh trong tr·∫ªo, bass s√¢u.', 5),
(N'Ch·ªëng ·ªìn tuy·ªát v·ªùi, ph√π h·ª£p cho vƒÉn ph√≤ng ·ªìn √†o.', 4),
(N'Thi·∫øt k·∫ø ƒë·∫πp, ƒëeo tho·∫£i m√°i. Pin d√πng l√¢u.', 5),
(N'AirPods Pro 2 xu·∫•t s·∫Øc! K·∫øt n·ªëi nhanh, ch·∫•t l∆∞·ª£ng √¢m thanh ƒë·ªânh.', 5),
(N'Tai nghe wireless ti·ªán l·ª£i. Ch·∫•t l∆∞·ª£ng √¢m thanh ·ªïn.', 4),
(N'T√≠nh nƒÉng ch·ªëng ·ªìn th√¥ng minh. R·∫•t th√≠ch!', 4),
(N'√Çm thanh Hi-Res tuy·ªát v·ªùi, ƒë√°ng t·ª´ng ƒë·ªìng b·ªè ra.', 5),
(N'Gaming headset t·ªët, micro r√µ r√†ng. Ph√π h·ª£p stream.', 4),
(N'C√≥ th·ªÉ r∆°i ra kh·ªèi tai khi v·∫≠n ƒë·ªông m·∫°nh. Nh√¨n chung ok.', 3),
(N'Sony kh√¥ng bao gi·ªù l√†m t√¥i th·∫•t v·ªçng! √Çm bass s√¢u, treble trong.', 5);

DECLARE @GeneralComments TABLE (Comment NVARCHAR(500), Rating INT);
INSERT INTO @GeneralComments VALUES
(N'S·∫£n ph·∫©m tuy·ªát v·ªùi! R·∫•t h√†i l√≤ng v·ªõi ch·∫•t l∆∞·ª£ng.', 5),
(N'Ch·∫•t l∆∞·ª£ng t·ªët, gi√° c·∫£ h·ª£p l√Ω. S·∫Ω mua l·∫°i l·∫ßn sau.', 4),
(N'ƒê√∫ng nh∆∞ m√¥ t·∫£, giao h√†ng nhanh. Recommend!', 5),
(N'S·∫£n ph·∫©m ·ªïn, ph√π h·ª£p v·ªõi nhu c·∫ßu s·ª≠ d·ª•ng.', 4),
(N'Ch·∫•t l∆∞·ª£ng cao, d·ªãch v·ª• t·ªët. C·∫£m ∆°n shop!', 5),
(N'R·∫•t h√†i l√≤ng! S·∫Ω gi·ªõi thi·ªáu cho b·∫°n b√®.', 4),
(N'T·ªët trong t·∫ßm gi√°, ƒë√°ng ƒë·ªÉ mua th·ª≠.', 4),
(N'S·∫£n ph·∫©m ok, kh√¥ng c√≥ g√¨ ƒë·∫∑c bi·ªát.', 3),
(N'Xu·∫•t s·∫Øc! V∆∞·ª£t mong ƒë·ª£i c·ªßa t√¥i.', 5),
(N'B√¨nh th∆∞·ªùng, c√≥ th·ªÉ t·ªët h∆°n.', 3);

-- =============================================
-- T·∫†O REVIEWS CHO T·ª™NG S·∫¢N PH·∫®M
-- =============================================

DECLARE @ProductId INT, @ProductName NVARCHAR(255), @CategoryName NVARCHAR(100);
DECLARE @UserId INT, @ReviewCount INT = 0;
DECLARE @Comment NVARCHAR(500), @Rating INT;

-- Cursor ƒë·ªÉ duy·ªát qua t·∫•t c·∫£ s·∫£n ph·∫©m
DECLARE product_cursor CURSOR FOR 
SELECT p.Id, p.Name, c.Name as CategoryName
FROM Products p
INNER JOIN Categories c ON p.CategoryId = c.Id
ORDER BY p.Id;

OPEN product_cursor;
FETCH NEXT FROM product_cursor INTO @ProductId, @ProductName, @CategoryName;

WHILE @@FETCH_STATUS = 0
BEGIN
    PRINT N'üì± T·∫°o reviews cho: ' + @ProductName + N' (Category: ' + @CategoryName + N')';
    
    -- T·∫°o 3-7 reviews ng·∫´u nhi√™n cho m·ªói s·∫£n ph·∫©m
    DECLARE @ReviewsToCreate INT = 3 + (ABS(CHECKSUM(NEWID())) % 5); -- 3-7 reviews
    DECLARE @CurrentReview INT = 1;
    
    WHILE @CurrentReview <= @ReviewsToCreate
    BEGIN
        -- Ch·ªçn user ng·∫´u nhi√™n
        SELECT TOP 1 @UserId = Id 
        FROM Users 
        WHERE Id NOT IN (
            SELECT UserId FROM Reviews WHERE ProductId = @ProductId
        )
        ORDER BY NEWID();
        
        -- N·∫øu h·∫øt user th√¨ d·ª´ng
        IF @UserId IS NULL
            BREAK;
            
        -- Ch·ªçn comment ph√π h·ª£p theo category
        IF @CategoryName LIKE N'%phone%' OR @CategoryName LIKE N'%ƒëi·ªán tho·∫°i%'
        BEGIN
            SELECT TOP 1 @Comment = Comment, @Rating = Rating 
            FROM @PhoneComments 
            ORDER BY NEWID();
        END
        ELSE IF @CategoryName LIKE N'%laptop%' OR @CategoryName LIKE N'%m√°y t√≠nh%'
        BEGIN
            SELECT TOP 1 @Comment = Comment, @Rating = Rating 
            FROM @LaptopComments 
            ORDER BY NEWID();
        END
        ELSE IF @CategoryName LIKE N'%headphone%' OR @CategoryName LIKE N'%tai nghe%'
        BEGIN
            SELECT TOP 1 @Comment = Comment, @Rating = Rating 
            FROM @HeadphoneComments 
            ORDER BY NEWID();
        END
        ELSE
        BEGIN
            SELECT TOP 1 @Comment = Comment, @Rating = Rating 
            FROM @GeneralComments 
            ORDER BY NEWID();
        END
        
        -- Insert review
        INSERT INTO Reviews (ProductId, UserId, Rating, Comment, CreatedAt, IsApproved)
        VALUES (
            @ProductId,
            @UserId,
            @Rating,
            @Comment,
            DATEADD(day, -ABS(CHECKSUM(NEWID()) % 60), GETDATE()), -- Random ng√†y trong 60 ng√†y qua
            1 -- Auto approve
        );
        
        SET @ReviewCount = @ReviewCount + 1;
        SET @CurrentReview = @CurrentReview + 1;
        SET @UserId = NULL; -- Reset
    END
    
    FETCH NEXT FROM product_cursor INTO @ProductId, @ProductName, @CategoryName;
END

CLOSE product_cursor;
DEALLOCATE product_cursor;

-- =============================================
-- TH√äM M·ªòT S·ªê REVIEWS TI√äU C·ª∞C ƒê·ªÇ C√ÇN B·∫∞NG
-- =============================================

PRINT N'‚öñÔ∏è Th√™m m·ªôt s·ªë reviews ti√™u c·ª±c ƒë·ªÉ c√¢n b·∫±ng...';

DECLARE @NegativeComments TABLE (Comment NVARCHAR(500), Rating INT);
INSERT INTO @NegativeComments VALUES
(N'S·∫£n ph·∫©m kh√¥ng nh∆∞ mong ƒë·ª£i. Ch·∫•t l∆∞·ª£ng c√≥ th·ªÉ t·ªët h∆°n.', 2),
(N'Gi√° h∆°i cao so v·ªõi ch·∫•t l∆∞·ª£ng th·ª±c t·∫ø.', 2),
(N'C√≥ m·ªôt s·ªë l·ªói nh·ªè, c·∫ßn c·∫£i thi·ªán th√™m.', 3),
(N'S·∫£n ph·∫©m b√¨nh th∆∞·ªùng, kh√¥ng c√≥ g√¨ ƒë·∫∑c bi·ªát.', 3),
(N'Giao h√†ng h∆°i ch·∫≠m, s·∫£n ph·∫©m ok.', 3),
(N'Ch·∫•t l∆∞·ª£ng ok nh∆∞ng kh√¥ng v∆∞·ª£t tr·ªôi.', 3),
(N'Pin kh√¥ng nh∆∞ qu·∫£ng c√°o, t·ª•t nhanh.', 2),
(N'Thi·∫øt k·∫ø ƒë·∫πp nh∆∞ng d√πng kh√¥ng ƒë∆∞·ª£c l√¢u.', 2);

-- Th√™m 10-15 reviews ti√™u c·ª±c ng·∫´u nhi√™n
DECLARE @NegativeCount INT = 10 + (ABS(CHECKSUM(NEWID())) % 6); -- 10-15 reviews
DECLARE @CurrentNegative INT = 1;

WHILE @CurrentNegative <= @NegativeCount
BEGIN
    -- Ch·ªçn s·∫£n ph·∫©m ng·∫´u nhi√™n
    SELECT TOP 1 @ProductId = Id FROM Products ORDER BY NEWID();
    
    -- Ch·ªçn user ng·∫´u nhi√™n ch∆∞a review s·∫£n ph·∫©m n√†y
    SELECT TOP 1 @UserId = Id 
    FROM Users 
    WHERE Id NOT IN (
        SELECT UserId FROM Reviews WHERE ProductId = @ProductId
    )
    ORDER BY NEWID();
    
    IF @UserId IS NOT NULL
    BEGIN
        -- Ch·ªçn comment ti√™u c·ª±c
        SELECT TOP 1 @Comment = Comment, @Rating = Rating 
        FROM @NegativeComments 
        ORDER BY NEWID();
        
        INSERT INTO Reviews (ProductId, UserId, Rating, Comment, CreatedAt, IsApproved)
        VALUES (
            @ProductId,
            @UserId,
            @Rating,
            @Comment,
            DATEADD(day, -ABS(CHECKSUM(NEWID()) % 30), GETDATE()),
            1
        );
        
        SET @ReviewCount = @ReviewCount + 1;
    END
    
    SET @CurrentNegative = @CurrentNegative + 1;
END

-- =============================================
-- TH√îNG B√ÅO K·∫æT QU·∫¢
-- =============================================

PRINT N'‚úÖ Ho√†n th√†nh t·∫°o reviews!';
PRINT N'üìä T·ªïng s·ªë reviews ƒë√£ t·∫°o: ' + CAST(@ReviewCount AS NVARCHAR(10));

-- Hi·ªÉn th·ªã th·ªëng k√™
SELECT 
    N'üìà TH·ªêNG K√ä REVIEWS' as [Report],
    COUNT(*) as [T·ªïng Reviews],
    AVG(CAST(Rating AS FLOAT)) as [Rating Trung B√¨nh],
    MIN(Rating) as [Rating Th·∫•p Nh·∫•t],
    MAX(Rating) as [Rating Cao Nh·∫•t]
FROM Reviews;

-- Top 10 s·∫£n ph·∫©m c√≥ nhi·ªÅu reviews nh·∫•t
SELECT TOP 10
    p.Name as [T√™n S·∫£n Ph·∫©m],
    COUNT(r.Id) as [S·ªë Reviews],
    AVG(CAST(r.Rating AS FLOAT)) as [Rating TB],
    c.Name as [Danh M·ª•c]
FROM Products p
LEFT JOIN Reviews r ON p.Id = r.ProductId
LEFT JOIN Categories c ON p.CategoryId = c.Id
GROUP BY p.Id, p.Name, c.Name
ORDER BY COUNT(r.Id) DESC, AVG(CAST(r.Rating AS FLOAT)) DESC;

-- Ph√¢n b·ªë rating
SELECT 
    Rating as [Rating],
    COUNT(*) as [S·ªë L∆∞·ª£ng],
    CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Reviews) AS DECIMAL(5,2)) as [Ph·∫ßn TrƒÉm]
FROM Reviews
GROUP BY Rating
ORDER BY Rating DESC;

PRINT N'üéØ Script ho√†n t·∫•t! Database ƒë√£ c√≥ ƒë·∫ßy ƒë·ªß reviews cho s·∫£n ph·∫©m.';
GO
